# Generated by Django 3.2 on 2022-04-27 14:13

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import papers.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('slogan', models.TextField(null=True)),
                ('shown', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to=papers.models.upload_location)),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_folders', to='accounts.profile')),
                ('students', models.ManyToManyField(related_name='courses', to='accounts.Profile')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Island',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('img', models.ImageField(blank=True, null=True, upload_to=papers.models.upload_location)),
                ('order', models.IntegerField(default=0)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='islands', to='papers.course')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(default='', null=True)),
                ('rating', models.IntegerField(default=0)),
                ('cost', models.IntegerField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('access_to_everyone', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to=papers.models.upload_location)),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_author', to='accounts.profile')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='papers.course')),
                ('done_by', models.ManyToManyField(related_name='done_lessons', to='accounts.Profile')),
                ('island', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='papers.island')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('order', models.IntegerField(null=True)),
                ('is_task', models.BooleanField(default=False)),
                ('done_by', models.ManyToManyField(related_name='done_pages', to='accounts.Profile')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('slogan', models.TextField(null=True)),
                ('shown', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to=papers.models.upload_location)),
            ],
        ),
        migrations.CreateModel(
            name='SubscribePay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=250)),
                ('transactionId', models.IntegerField(default=0)),
                ('amount', models.FloatField(default=0)),
                ('currency', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribe_payments', to='papers.lesson')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('easy_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('middle_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('hard_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('pro_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('author', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill', to='accounts.profile')),
                ('interested_subjects', models.ManyToManyField(default=1, related_name='interested_students', to='papers.Lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='', null=True)),
                ('youtube_video_link', models.TextField(default='')),
                ('order', models.IntegerField(default=0)),
                ('pages', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='papers.page')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='tasks.task')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='pages',
            field=models.ManyToManyField(related_name='lessons', to='papers.Page'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='try_by',
            field=models.ManyToManyField(related_name='try_lessons', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='papers.subject'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(default='')),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hiscomments', to='accounts.profile')),
                ('dislikes', models.ManyToManyField(related_name='disliked_comments', to='accounts.Profile')),
                ('likes', models.ManyToManyField(related_name='liked_comments', to='accounts.Profile')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='papers.comment')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.TextField(default='lesson')),
                ('object_id', models.IntegerField(null=True)),
                ('action', models.TextField(default='copy')),
                ('previous_parent', models.IntegerField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('full', models.BooleanField(default=False)),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_cache', to='accounts.profile')),
            ],
        ),
    ]
